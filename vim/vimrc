
" must be first, changes behaviour of other settings
set nocompatible

" 256 colors
set t_Co=256

" syntax highlighting
syntax on

" theme mode
set background=dark

" sane text files
set fileformat=unix
set encoding=utf-8

" enter spaces when tab is pressed
set expandtab
" configure expanding of tabs for various file types
au BufRead,BufNewFile *.py set expandtab
au BufRead,BufNewFile *.c set noexpandtab
au BufRead,BufNewFile *.h set noexpandtab
au BufRead,BufNewFile Makefile* set noexpandtab

" break lines when line length increases
set textwidth=120
" use 4 spaces to represent tab
set tabstop=4
set softtabstop=4
" number of spaces to use for auto indent
set shiftwidth=4
" copy indent from current line when starting a new line
set autoindent

"make sure highlighting works all the way down long files
autocmd BufEnter * :syntax sync fromstart

" allow cursor to be positioned one char past end of line
" and apply operations to all of selection including last char
set selection=exclusive

" allow backgrounding buffers without writing them
" and remember marks/undo for backgrounded buffers
set hidden

" Keep more context when scrolling off the end of a buffer
set scrolloff=3

" allow cursor keys to go right off end of one line, onto start of next
set whichwrap+=<,>,[,]
" allow backspacing over everything in insert mode
set backspace=indent,eol,start

" no line wrapping
set nowrap

" line numbers
set number

" when joining lines, don't insert two spaces after punctuation
set nojoinspaces

" Make searches case-sensitive only if they contain upper-case characters
set ignorecase
set smartcase
" show search matches as the search pattern is typed
set incsearch
" search-next wraps back to start of file
set wrapscan
" highlight last search matches
set hlsearch
" map key to dismiss search highlightedness
map <bs> :oh<CR>

" grep for word under cursor
noremap <Leader>g :grep -rw '<C-r><C-w>' .<CR>

" aliases for window switching (browser captures ctrl-w)
noremap <C-l> <C-w>l
noremap <C-h> <C-w>h
noremap <C-k> <C-w>k
noremap <C-j> <C-w>j

" new spilt [vs right] or [hs below]
set splitbelow splitright

" similarly ctrl-q doesnt work, so use leader-q for block visual mode
nnoremap <leader>q <C-Q>

" make tab completion for files/buffers act like bash
set wildmenu

" display cursor co-ords at all times
set ruler
set cursorline

" display number of selected chars, lines, or size of blocks.
set showcmd

" show matching brackets, etc, for 1/10th of a second
set showmatch
set matchtime=1

" enables filetype specific plugins
filetype plugin on
" enables filetype detection
filetype on

if has("autocmd")
    " Enable file type detection.
    " Use the default filetype settings, so that mail gets 'tw' set to 72,
    " 'cindent' is on in C files, etc.
    " Also load indent files, to automatically do language-dependent indenting.
    filetype plugin indent on
    
    " When editing a file, always jump to the last known cursor position.
    " Don't do it when the position is invalid or when inside an event handler
    " (happens when dropping a file on gvim).
    autocmd BufReadPost *
    \ if line("'\"") > 0 && line("'\"") <= line("$") |
    \   exe "normal g`\"" |
    \ endif

else
    " if old vim, set vanilla autoindenting on
    set autoindent

endif " has("autocmd")
" enable automatic yanking to and pasting from the selection
set clipboard+=unnamed

" places to look for tags files:
set tags=./tags,tags

" recursively search file's parent dirs for tags file
" set tags+=./tags;/
" recursively search cwd's parent dirs for tags file
set tags+=tags;/

"autocompletion
inoremap <c-space> <c-n>
inoremap <c-s-space> <c-p>

" Ctrl + Shift + Up / Down To Move Line Up or Down
noremap <c-s-up> :call feedkeys( line('.')==1 ? '' : 'ddkP' )<CR>
noremap <c-s-down> ddp
nmap <C-d> mzyyp`z


"------------------------------------------------------------------------------------
"--- Plugins-------------------------------------------------------------------------
"------------------------------------------------------------------------------------

" install vim package manager vim-plug
" https://github.com/junegunn/vim-plug.git
" curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
"    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim

" Plugins
call plug#begin('~/.vim/plugged')

" colorscheme
"    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
Plug 'tomasr/molokai'
Plug 'cocopon/iceberg.vim'
Plug 'wolf-dog/nighted.vim'
Plug 'https://github.com/endel/vim-github-colorscheme.git'
Plug 'fcpg/vim-fahrenheit'
Plug 'morhetz/gruvbox'
Plug 'sjl/badwolf'

" packages
Plug 'scrooloose/vim-fugitive' " git tools package

call plug#end()

"colorscheme molokai
"colorscheme github
"colorscheme gruvbox
"colorscheme badwolf
colorscheme fahrenheit
